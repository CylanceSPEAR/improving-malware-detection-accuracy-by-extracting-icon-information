import logging
import numpy as np
from src.model_utils import run_single_model
import src.model_config as model_config

logging.basicConfig(level=logging.INFO, format='%(asctime)s %(levelname)s %(funcName)s: %(message)s')

def get_model_performance_info(result_dict):
    cv_acc_mean = result_dict['valid_score']['accuracy']['mean']
    cv_acc_std = result_dict['valid_score']['accuracy']['std']
    cv_TPR_mean = result_dict['valid_score']['TPR']['mean']
    cv_TPR_std = result_dict['valid_score']['TPR']['std']
    cv_TNR_mean = result_dict['valid_score']['TNR']['mean']
    cv_TNR_std = result_dict['valid_score']['TNR']['std']

    test_acc = result_dict['test_score']['accuracy']
    test_TPR = result_dict['test_score']['TPR']
    test_TNR = result_dict['test_score']['TNR']

    test_roc = result_dict['roc']['auc']

    return (cv_acc_mean,
        cv_acc_std,
        cv_TPR_mean,
        cv_TPR_std,
        cv_TNR_mean,
        cv_TNR_std,
        test_acc,
        test_TPR,
        test_TNR,
        test_roc)

model_setups = [
    ('LR L1 no icon', model_config.guides_without_icon, model_config.logistic_l1_model_no_icon),
    ('LR L1 with icon', model_config.guides_with_icon_ohe, model_config.logistic_l1_model_ohe_icon),
    ('LR L2 no icon', model_config.guides_without_icon, model_config.logistic_l2_model_no_icon),
    ('LR L2 with icon', model_config.guides_with_icon_ohe, model_config.logistic_l2_model_ohe_icon),
    ('SVM no icon', model_config.guides_without_icon, model_config.svc_linear_model_no_icon),
    ('SVM with icon', model_config.guides_with_icon_ohe, model_config.svc_linear_model_ohe_icon)
]

with open('model_performance.csv', 'w') as f:
    f.write('model,alpha,4cv accuracy,4cv accuracy std,4cv TPR,4cv TPR std,4cv TNR,4cv TNR std,test accuracy,test TPR,test TNR,test ROC\n')
    for name, guides, model_cfg in model_setups:
        f.write('%s,%4.2e,' % (name, 1. / model_cfg['params']['C']))
        result_dict = run_single_model(guides, model_cfg)
        f.write(','.join(map(lambda x: '%4.3f' % x, get_model_performance_info(result_dict))))
        f.write('\n')

