import logging
import numpy as np
from src.model_utils import run_single_model
from src.plot_utils import *
import src.model_config as model_config

logging.basicConfig(level=logging.INFO, format='%(asctime)s %(levelname)s %(funcName)s: %(message)s')

def plot_ax(ax, guides_dict, model_config_dict, xlabel, xvalues):
    result_dict_list = []
    for val in xvalues:
        model_config_dict['params'][xlabel] = val
        result_dict = run_single_model(guides_dict, model_config_dict)
        result_dict_list.append(result_dict)

    plot_models_scores_axes(ax, 1. / xvalues, result_dict_list, logscale=True)

fig, axes = plt.subplots(ncols=1, nrows=2, sharex=True)
plt.subplots_adjust(hspace=0.15)
plot_ax(ax=axes[0],
    guides_dict=model_config.guides_without_icon,
    model_config_dict=model_config.logistic_l1_model_no_icon,
    xlabel='C',
    xvalues=np.logspace(-4, 3, 13))
plot_ax(ax=axes[1],
    guides_dict=model_config.guides_with_icon_ohe,
    model_config_dict=model_config.logistic_l1_model_ohe_icon,
    xlabel='C',
    xvalues=np.logspace(-4, 3, 13))
axes[0].set_ylabel('without icon cluster')
axes[1].set_ylabel('with icon cluster')
axes[1].set_xlabel(r'$\alpha$')
axes[1].legend(loc=0, framealpha=0.6)
plt.savefig('plot_lr_l1_vertical.pdf', bbox_inches='tight')